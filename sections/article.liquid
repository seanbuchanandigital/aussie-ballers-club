<!-- /sections/article-template.liquid -->

{%- assign number_of_comments = article.comments_count -%}

{% comment %}
  If a comment was just submitted and it has no blank fields, we have an extra comment to count.
{% endcomment %}

{%- if comment and comment.created_at -%}
  {%- assign number_of_comments = article.comments_count %}
{%- endif -%}

<div class="wrapper wrapper--small">
  <article class="article__wrapper">

    <header class="section-header section-header--article">
      <h1>{{ article.title }}</h1>
      {%- capture author -%}{{ article.author }}{%- endcapture -%}
      {%- capture date -%}<time datetime="{{ article.published_at | date: '%Y-%m-%d' }}">{{ article.published_at | date: format: 'month_day_year' }}</time>{%- endcapture -%}
      <small class="light-gray">{{ 'blogs.article.author_on_date_html' | t: author: author, date: date }}</small>
    </header>

    {%- if article.image -%}
      <div class="article__image__wrapper">
        {%- render 'responsive-image', image: article.image, image_class: 'article__image', image_alt: article.image.alt -%}
      </div>
    {%- endif -%}

    <div class="rte">
      {{- article.content -}}
    </div>

    {%- if article.tags.size > 0 -%}
      <ul class="inline-list">
        {%- render 'tags-article', article: article, blog: blog -%}
      </ul>
    {%- endif -%}

    {%- if section.settings.show_share_buttons -%}
      {%- render 'social-sharing', article: article -%}
    {%- endif -%}
    {% comment %}
      Create links to the next and previous articles, if available.
    {% endcomment %}
    {%- if blog.next_article or blog.previous_article -%}
      <p class="article__nav-arrows">
        {% if blog.previous_article %}
          {{ 'blogs.article.older_post' | t | prepend: '&larr; ' | link_to: blog.previous_article }}
        {% endif %}
        {% if blog.next_article %}
          {{ 'blogs.article.newer_post' | t | append: ' &rarr;' | link_to: blog.next_article }}
        {% endif %}
      </p>
    {%- endif -%}

    {%- if blog.comments_enabled? -%}
      {%- if settings.show_spacer_lines -%}
        <hr>
      {%- endif -%}
      {%- unless number_of_comments == '0' -%}
        <p>{{ 'blogs.comments.comments_with_count' | t: count: number_of_comments }}</p>
      {%- endunless -%}
      {% comment %}
        Just like blog.liquid page, define how many comments should be on each page.
      {% endcomment %}
      {%- paginate article.comments by 5 -%}
        {% comment %}
          #Comments is required, it is used as an anchor link by Shopify.
        {% endcomment %}
        <div id="Comments">
          {%- if number_of_comments > 0 -%}
            <ul class="no-bullets">
              {% comment %}
                If a comment was just submitted with no blank field, show it.
              {% endcomment %}
              {%- if comment and comment.created_at -%}
                {%- assign submitted_comment_id = comment.id -%}
                <li id="{{ comment.id }}" class="comment first{% if article.comments_count == 0 %} last{% endif %}">
                  {%- render 'comment', comment: comment -%}
                </li>
              {%- endif -%}

              {% comment %}
                Showing the rest of the comments.
              {% endcomment %}
              {%- for comment in article.comments -%}
                {%- unless comment.id == submitted_comment_id -%}
                  <li id="{{ comment.id }}" class="comment{% unless number_of_comments > article.comments_count %}{% if forloop.first %} first{% endif %}{% endunless %}{% if forloop.last %} last {% endif %}">
                    {%- render 'comment', comment: comment -%}
                  </li>
                {%- endunless -%}

                {%- unless forloop.last -%}
                  <li></li>
                {%- endunless -%}
              {% endfor %}
            </ul>

            {%- if paginate.pages > 1 -%}
              {%- if settings.show_spacer_lines -%}
                <hr>
              {%- endif -%}
              <div class="pagination">
                {{ paginate | default_pagination | replace: '&laquo; Previous', '&larr;' | replace: 'Next &raquo;', '&rarr;' }}
              </div>
            {%- endif -%}
          {%- endif -%}

          {% comment %}
            Comment submission form
          {% endcomment %}
          <div class="form-vertical">
            {% form 'new_comment', article, id: 'NewComment' %}

            {%- assign post_message = 'blogs.comments.success' -%}
            {%- if blog.moderated? and comment.status == 'pending' -%}
              {%- assign post_message = 'blogs.comments.success_moderated' -%}
            {%- elsif comment.status == 'unapproved' or comment.status == 'spam' -%}
              {%- assign post_message = 'blogs.comments.unapproved' -%}
            {%- endif -%}

            {%- if form.posted_successfully? -%}
              <p class="note form-success">{{ post_message | t }}</p>
            {%- endif -%}

              {% comment %}
                #AddCommentTitle is used simply as an anchor link
              {% endcomment %}
              <h3 id="AddCommentTitle">{{ 'blogs.comments.title' | t }}</h3>

              {{ form.errors | default_errors }}

              <div class="comment__wrapper">

                <div class="comment__left">
                  <label for="CommentAuthor" class="hidden-label">{{ 'blogs.comments.name' | t }}</label>
                  <input type="text" name="comment[author]" id="CommentAuthor" class="input--full{% if form.errors contains 'author' %} error{% endif %}" placeholder="{{ 'blogs.comments.name' | t }}" value="{{ form.author }}" autocapitalize="words" required>

                  <label for="CommentEmail" class="hidden-label">{{ 'blogs.comments.email' | t }}</label>
                  <input type="email" name="comment[email]" id="CommentEmail" class="input--full{% if form.errors contains 'email' %} error{% endif %}" placeholder="{{ 'blogs.comments.email' | t }}" value="{{ form.email }}" autocorrect="off" autocapitalize="off" required>
                </div>

                <div class="comment__right">
                  <label for="CommentBody" class="hidden-label">{{ 'blogs.comments.message' | t }}</label>
                  <textarea name="comment[body]" id="CommentBody" class="input--full{% if form.errors contains 'body' %} error {% endif %}" placeholder="{{ 'blogs.comments.message' | t }}" required>{{ form.body }}</textarea>
                </div>

              </div>

              {%- if blog.moderated? -%}
                <small class = "light-gray">{{ 'blogs.comments.moderated' | t }}</small>
              {%- endif -%}

              <button type="submit" class="btn post-comment">{{ 'blogs.comments.post_comment' | t }}</button>

              {%- if form.errors -%}
                <script type="text/javascript">theme.settings.newHash = 'AddCommentTitle';</script>
              {%- endif -%}

              {%- if form.posted_successfully? -%}
                <script type="text/javascript">theme.settings.newHash = 'Comments';</script>
              {%- endif -%}

            {%- endform -%}
          </div>

        </div>
      {%- endpaginate -%}
    {%- endif -%}

  </article>

  {%- for block in section.blocks -%}
    {%- render block -%}
  {%- endfor -%}
</div>

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Article",
    "articleBody": {{ article.content | strip_html | json }},
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": {{ shop.url | append: page.url | json }}
    },
    "headline": {{ article.title | json }},
    {% if article.excerpt != blank %}
      "description": {{ article.excerpt | strip_html | json }},
    {% endif %}
    {% if article.image %}
      {% assign image_size = article.image.width | append: 'x' %}
      "image": [
        {{ article | img_url: image_size | prepend: "https:" | json }}
      ],
    {% endif %}
    "datePublished": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "dateCreated": {{ article.created_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "author": {
      "@type": "Person",
      "name": {{ article.author | json }}
    },
    "publisher": {
      "@type": "Organization",
      "name": {{ shop.name | json }}
    }
  }
</script>

{% schema %}
  {
    "name": "Posts",
    "settings": [
      {
        "type": "checkbox",
        "id": "show_share_buttons",
        "label": "Show social sharing buttons",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "@app"
      }
    ]
  }
{% endschema %}
